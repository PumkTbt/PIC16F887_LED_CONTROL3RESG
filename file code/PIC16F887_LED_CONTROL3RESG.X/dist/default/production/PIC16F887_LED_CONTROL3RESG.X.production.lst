

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jun 27 06:07:35 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0006                     _PORTB	set	6
   127  0009                     _PORTE	set	9
   128  005F                     _GIE	set	95
   129  005C                     _INTE	set	92
   130  0059                     _INTF	set	89
   131  0095                     _WPUB	set	149
   132  0086                     _TRISB	set	134
   133  0089                     _TRISE	set	137
   134  040E                     _INTEDG	set	1038
   135  040F                     _nRBPU	set	1039
   136  0430                     _TRISB0	set	1072
   137  0435                     _TRISB5	set	1077
   138  0434                     _TRISB4	set	1076
   139  0433                     _TRISB3	set	1075
   140  0189                     _ANSELH	set	393
   141  0188                     _ANSEL	set	392
   142                           
   143                           ; #config settings
   144  0000                     
   145                           	psect	cinit
   146  0015                     start_initialization:	
   147  0015                     __initialization:	
   148  0015                     end_of_initialization:	
   149                           ;End of C runtime variable initialization code
   150                           
   151  0015                     __end_of__initialization:	
   152  0015  0183               	clrf	3
   153  0016  120A  118A  2877   	ljmp	_main	;jump to C main() function
   154                           
   155                           	psect	cstackCOMMON
   156  0070                     __pcstackCOMMON:	
   157  0070                     ?_chop:	
   158  0070                     ?_sangdan:	
   159                           ; 1 bytes @ 0x0
   160                           
   161  0070                     ??_sangdan:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  0070                     ?_isr:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     ??_isr:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  0070                     ?_main:	
   171                           ; 1 bytes @ 0x0
   172                           
   173                           
   174                           ; 1 bytes @ 0x0
   175  0070                     	ds	6
   176  0076                     ??_main:	
   177                           
   178                           	psect	cstackBANK0
   179  0020                     __pcstackBANK0:	
   180                           ; 1 bytes @ 0x6
   181                           
   182  0020                     ??_chop:	
   183                           
   184                           ; 1 bytes @ 0x0
   185  0020                     	ds	3
   186                           
   187                           	psect	maintext
   188  0077                     __pmaintext:	
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 54 in file "Bai_2.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, status,2, status,0, pclath, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : B00/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   208 ;;      Params:         0       0       0       0       0
   209 ;;      Locals:         0       0       0       0       0
   210 ;;      Temps:          0       0       0       0       0
   211 ;;      Totals:         0       0       0       0       0
   212 ;;Total ram usage:        0 bytes
   213 ;; Hardware stack levels required when called:    3
   214 ;; This function calls:
   215 ;;		_chop
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           
   222                           ;psect for function _main
   223  0077                     _main:	
   224                           
   225                           ;Bai_2.c: 55: ANSEL = 0;
   226                           
   227                           ;incstack = 0
   228                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   229  0077  1683               	bsf	3,5	;RP0=1, select bank3
   230  0078  1703               	bsf	3,6	;RP1=1, select bank3
   231  0079  0188               	clrf	8	;volatile
   232                           
   233                           ;Bai_2.c: 56: ANSELH = 0;
   234  007A  0189               	clrf	9	;volatile
   235                           
   236                           ;Bai_2.c: 57: TRISB0 = 1;
   237  007B  1683               	bsf	3,5	;RP0=1, select bank1
   238  007C  1303               	bcf	3,6	;RP1=0, select bank1
   239  007D  1406               	bsf	6,0	;volatile
   240                           
   241                           ;Bai_2.c: 58: nRBPU = 0;
   242  007E  1381               	bcf	1,7	;volatile
   243                           
   244                           ;Bai_2.c: 59: WPUB = 0x01;
   245  007F  3001               	movlw	1
   246  0080  0095               	movwf	21	;volatile
   247                           
   248                           ;Bai_2.c: 60: INTEDG = 1;
   249  0081  1701               	bsf	1,6	;volatile
   250                           
   251                           ;Bai_2.c: 61: INTF = 0;
   252  0082  108B               	bcf	11,1	;volatile
   253                           
   254                           ;Bai_2.c: 62: INTE = 1;
   255  0083  160B               	bsf	11,4	;volatile
   256                           
   257                           ;Bai_2.c: 63: GIE = 1;
   258  0084  178B               	bsf	11,7	;volatile
   259  0085                     l616:	
   260                           ;Bai_2.c: 64: while(1)
   261                           
   262                           
   263                           ;Bai_2.c: 65: { chop();
   264  0085  120A  118A  2019  120A  118A  	fcall	_chop
   265  008A  2885               	goto	l616
   266  008B                     __end_of_main:	
   267                           
   268                           	psect	text1
   269  0019                     __ptext1:	
   270 ;; *************** function _chop *****************
   271 ;; Defined at:
   272 ;;		line 26 in file "Bai_2.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   286 ;;      Params:         0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0
   288 ;;      Temps:          0       3       0       0       0
   289 ;;      Totals:         0       3       0       0       0
   290 ;;Total ram usage:        3 bytes
   291 ;; Hardware stack levels used:    1
   292 ;; Hardware stack levels required when called:    2
   293 ;; This function calls:
   294 ;;		Nothing
   295 ;; This function is called by:
   296 ;;		_main
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           
   301                           ;psect for function _chop
   302  0019                     _chop:	
   303                           
   304                           ;Bai_2.c: 27: TRISE = 0;
   305                           
   306                           ;incstack = 0
   307                           ; Regs used in _chop: [wreg+status,2]
   308  0019  1683               	bsf	3,5	;RP0=1, select bank1
   309  001A  1303               	bcf	3,6	;RP1=0, select bank1
   310  001B  0189               	clrf	9	;volatile
   311                           
   312                           ;Bai_2.c: 28: PORTE = 0x06;
   313  001C  3006               	movlw	6
   314  001D  1283               	bcf	3,5	;RP0=0, select bank0
   315  001E  1303               	bcf	3,6	;RP1=0, select bank0
   316  001F  0089               	movwf	9	;volatile
   317                           
   318                           ;Bai_2.c: 29: TRISB3 = 0;
   319  0020  1683               	bsf	3,5	;RP0=1, select bank1
   320  0021  1303               	bcf	3,6	;RP1=0, select bank1
   321  0022  1186               	bcf	6,3	;volatile
   322                           
   323                           ;Bai_2.c: 30: TRISB4 = 0;
   324  0023  1206               	bcf	6,4	;volatile
   325                           
   326                           ;Bai_2.c: 31: TRISB5 = 1;
   327  0024  1686               	bsf	6,5	;volatile
   328                           
   329                           ;Bai_2.c: 32: PORTB = 0x10;
   330  0025  3010               	movlw	16
   331  0026  1283               	bcf	3,5	;RP0=0, select bank0
   332  0027  1303               	bcf	3,6	;RP1=0, select bank0
   333  0028  0086               	movwf	6	;volatile
   334                           
   335                           ;Bai_2.c: 33: TRISB3 = 0;
   336  0029  1683               	bsf	3,5	;RP0=1, select bank1
   337  002A  1303               	bcf	3,6	;RP1=0, select bank1
   338  002B  1186               	bcf	6,3	;volatile
   339                           
   340                           ;Bai_2.c: 34: TRISB4 = 1;
   341  002C  1606               	bsf	6,4	;volatile
   342                           
   343                           ;Bai_2.c: 35: TRISB5 = 0;
   344  002D  1286               	bcf	6,5	;volatile
   345                           
   346                           ;Bai_2.c: 36: PORTB = 0x20;
   347  002E  3020               	movlw	32
   348  002F  1283               	bcf	3,5	;RP0=0, select bank0
   349  0030  1303               	bcf	3,6	;RP1=0, select bank0
   350  0031  0086               	movwf	6	;volatile
   351                           
   352                           ;Bai_2.c: 37: _delay((unsigned long)((200)*(4000000/4000.0)));
   353  0032  3002               	movlw	2
   354  0033  1283               	bcf	3,5	;RP0=0, select bank0
   355  0034  1303               	bcf	3,6	;RP1=0, select bank0
   356  0035  00A2               	movwf	??_chop+2
   357  0036  3004               	movlw	4
   358  0037  00A1               	movwf	??_chop+1
   359  0038  30B9               	movlw	185
   360  0039  00A0               	movwf	??_chop
   361  003A                     u27:	
   362  003A  0BA0               	decfsz	??_chop,f
   363  003B  283A               	goto	u27
   364  003C  0BA1               	decfsz	??_chop+1,f
   365  003D  283A               	goto	u27
   366  003E  0BA2               	decfsz	??_chop+2,f
   367  003F  283A               	goto	u27
   368  0040  2841               	nop2
   369                           
   370                           ;Bai_2.c: 38: TRISB = 0x01;
   371  0041  3001               	movlw	1
   372  0042  1683               	bsf	3,5	;RP0=1, select bank1
   373  0043  1303               	bcf	3,6	;RP1=0, select bank1
   374  0044  0086               	movwf	6	;volatile
   375                           
   376                           ;Bai_2.c: 39: PORTB = 0;
   377  0045  1283               	bcf	3,5	;RP0=0, select bank0
   378  0046  1303               	bcf	3,6	;RP1=0, select bank0
   379  0047  0186               	clrf	6	;volatile
   380                           
   381                           ;Bai_2.c: 40: PORTE = 0;
   382  0048  0189               	clrf	9	;volatile
   383                           
   384                           ;Bai_2.c: 41: _delay((unsigned long)((200)*(4000000/4000.0)));
   385  0049  3002               	movlw	2
   386  004A  1283               	bcf	3,5	;RP0=0, select bank0
   387  004B  1303               	bcf	3,6	;RP1=0, select bank0
   388  004C  00A2               	movwf	??_chop+2
   389  004D  3004               	movlw	4
   390  004E  00A1               	movwf	??_chop+1
   391  004F  30B9               	movlw	185
   392  0050  00A0               	movwf	??_chop
   393  0051                     u37:	
   394  0051  0BA0               	decfsz	??_chop,f
   395  0052  2851               	goto	u37
   396  0053  0BA1               	decfsz	??_chop+1,f
   397  0054  2851               	goto	u37
   398  0055  0BA2               	decfsz	??_chop+2,f
   399  0056  2851               	goto	u37
   400  0057  2858               	nop2
   401  0058  0008               	return
   402  0059                     __end_of_chop:	
   403                           
   404                           	psect	text2
   405  0059                     __ptext2:	
   406 ;; *************** function _isr *****************
   407 ;; Defined at:
   408 ;;		line 46 in file "Bai_2.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0, pclath, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0
   424 ;;      Temps:          6       0       0       0       0
   425 ;;      Totals:         6       0       0       0       0
   426 ;;Total ram usage:        6 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; Hardware stack levels required when called:    1
   429 ;; This function calls:
   430 ;;		_sangdan
   431 ;; This function is called by:
   432 ;;		Interrupt level 1
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           
   437                           ;psect for function _isr
   438  0059                     _isr:	
   439                           
   440                           ;Bai_2.c: 48: if(INTF = 1){
   441  0059  148B               	bsf	11,1	;volatile
   442  005A  1C8B               	btfss	11,1	;volatile
   443  005B  286A               	goto	L1
   444                           
   445                           ;Bai_2.c: 49: _delay((unsigned long)((5)*(4000000/4000.0)));
   446  005C  3007               	movlw	7
   447  005D  00F1               	movwf	??_isr+1
   448  005E  307D               	movlw	125
   449  005F  00F0               	movwf	??_isr
   450  0060                     u4_27:	
   451  0060  0BF0               	decfsz	??_isr,f
   452  0061  2860               	goto	u4_27
   453  0062  0BF1               	decfsz	??_isr+1,f
   454  0063  2860               	goto	u4_27
   455                           
   456                           ;Bai_2.c: 50: sangdan();
   457  0064  120A  118A  208B  120A  118A  	fcall	_sangdan
   458                           
   459                           ;Bai_2.c: 51: }
   460                           ;Bai_2.c: 52: INTF = 0;
   461  0069  108B               	bcf	11,1	;volatile
   462  006A                     L1:	
   463  006A  0875               	movf	??_isr+5,w
   464  006B  1283               	bcf	3,5	;RP0=0, select bank0
   465  006C  1303               	bcf	3,6	;RP1=0, select bank0
   466  006D  00FF               	movwf	127
   467  006E  0874               	movf	??_isr+4,w
   468  006F  008A               	movwf	10
   469  0070  0873               	movf	??_isr+3,w
   470  0071  0084               	movwf	4
   471  0072  0E72               	swapf	(??_isr+2)^(0+-128),w
   472  0073  0083               	movwf	3
   473  0074  0EFE               	swapf	126,f
   474  0075  0E7E               	swapf	126,w
   475  0076  0009               	retfie
   476  0077                     __end_of_isr:	
   477                           
   478                           	psect	intentry
   479  0004                     __pintentry:	
   480                           ;incstack = 0
   481                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   482                           
   483  0004                     interrupt_function:	
   484  007E                     saved_w	set	btemp
   485  0004  00FE               	movwf	btemp
   486  0005  0E03               	swapf	3,w
   487  0006  00F2               	movwf	??_isr+2
   488  0007  0804               	movf	4,w
   489  0008  00F3               	movwf	??_isr+3
   490  0009  080A               	movf	10,w
   491  000A  00F4               	movwf	??_isr+4
   492  000B  1283               	bcf	3,5	;RP0=0, select bank0
   493  000C  1303               	bcf	3,6	;RP1=0, select bank0
   494  000D  087F               	movf	btemp+1,w
   495  000E  00F5               	movwf	??_isr+5
   496  000F  120A  118A  2859   	ljmp	_isr
   497                           
   498                           	psect	text3
   499  008B                     __ptext3:	
   500 ;; *************** function _sangdan *****************
   501 ;; Defined at:
   502 ;;		line 43 in file "Bai_2.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;		None
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		None
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       0       0       0       0
   517 ;;      Locals:         0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0
   519 ;;      Totals:         0       0       0       0       0
   520 ;;Total ram usage:        0 bytes
   521 ;; Hardware stack levels used:    1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_isr
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           
   530                           ;psect for function _sangdan
   531  008B                     _sangdan:	
   532                           
   533                           ;incstack = 0
   534                           ; Regs used in _sangdan: []
   535  008B  0008               	return
   536  008C                     __end_of_sangdan:	
   537  007E                     btemp	set	126	;btemp
   538  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_chop

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _chop
 ---------------------------------------------------------------------------------
 (1) _chop                                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
                            _sangdan
 ---------------------------------------------------------------------------------
 (3) _sangdan                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _chop

 _isr (ROOT)
   _sangdan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jun 27 06:07:35 2021

            __CFG_CP$OFF 0000                       u27 003A                       u37 0051  
                    l616 0085                      _GIE 005F             __CFG_CPD$OFF 0000  
                    _isr 0059                      fsr0 0004             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     ?_isr 0070                     _INTE 005C  
                   _INTF 0059                     _WPUB 0095                     u4_27 0060  
           __CFG_WRT$OFF 0000                     _chop 0019                     _main 0077  
                   btemp 007E                     start 0012            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ??_isr 0070                    ?_chop 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _ANSEL 0188  
                  _PORTB 0006                    _PORTE 0009                    _TRISB 0086  
                  _TRISE 0089           __CFG_FCMEN$OFF 0000                    _nRBPU 040F  
        __end_of_sangdan 008C           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_chop 0059             __end_of_main 008B                   ??_chop 0020  
                 ??_main 0076                   _ANSELH 0189                   _INTEDG 040E  
                 _TRISB0 0430                   _TRISB3 0433                   _TRISB4 0434  
                 _TRISB5 0435           __CFG_PWRTE$OFF 0000                ??_sangdan 0070  
                 saved_w 007E  __end_of__initialization 0015           __pcstackCOMMON 0070  
             __pmaintext 0077               __pintentry 0004                  __ptext1 0019  
                __ptext2 0059                  __ptext3 008B             __size_of_isr 001E  
                _sangdan 008B     end_of_initialization 0015      start_initialization 0015  
            __end_of_isr 0077                ___latbits 0002            __pcstackBANK0 0020  
               ?_sangdan 0070        interrupt_function 0004         __size_of_sangdan 0001  
      __CFG_BOR4V$BOR40V 0000            __size_of_chop 0040            __size_of_main 0014  
               intlevel1 0000  
